openapi: 3.0.0
info:
  version: 1.0.0
  title: Hotel Booking API
  description: API for booking hotels and managing accommodations
  contact:
    name: Tso Wan Lung
    email: 247029594@stu.vtc.edu.hk
  license:
    name: Apache 2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: "http://localhost:10888/api/v1"
    description: Development server
tags:
  - name: Hotels
    description: Hotel search and information
  - name: Bookings
    description: Booking management
  - name: Users
    description: User account management
  - name: Authentication
    description: Login and authentication
  - name: Favourites
    description: Manage user favourites
  - name: Messages
    description: Booking messages and communication

paths:
  /hotels:
    get:
      tags:
        - Hotels
      summary: Get all hotels
      description: Returns a list of all hotels with pagination
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Maximum number of hotels to return
        - in: query
          name: page
          schema:
            type: integer
          description: Page number
      responses:
        "200":
          description: List of hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Hotel"
        "404":
          description: No hotels found

  /hotels/search:
    post:
      tags:
        - Hotels
      summary: Search hotels
      description: Search hotels by country, city, and dates
      requestBody:
        description: Search criteria
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: string
                  description: Country name to search in
                city:
                  type: string
                  description: City name to search in
                start_date:
                  type: string
                  format: date
                  description: Check-in date
                end_date:
                  type: string
                  format: date
                  description: Check-out date
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Hotel"
        "404":
          description: No hotels found matching the criteria

  /hotels/{id}:
    get:
      tags:
        - Hotels
      summary: Get hotel by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Hotel ID
      responses:
        "200":
          description: Hotel details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hotel"
        "404":
          description: Hotel not found

  /hotels/{id}/rooms:
    get:
      tags:
        - Hotels
      summary: Get rooms by hotel ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Hotel ID
      responses:
        "200":
          description: List of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Room"
        "404":
          description: No rooms found for this hotel

  /hotels/bookings:
    post:
      tags:
        - Bookings
      summary: Create a booking
      security:
        - bearerAuth: []
      requestBody:
        description: Booking details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ID of the user making the booking
                start_date:
                  type: string
                  format: date
                  description: Check-in date
                end_date:
                  type: string
                  format: date
                  description: Check-out date
                first_message:
                  type: string
                  description: Initial message from the user
                rooms:
                  type: array
                  items:
                    type: integer
                  description: Array of room IDs to book
              required:
                - user_id
                - start_date
                - end_date
                - rooms
      responses:
        "201":
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "400":
          description: Invalid request data
        "401":
          description: Unauthorized
        "500":
          description: Failed to create booking

  /hotels/private/bookings:
    get:
      tags:
        - Bookings
      summary: Get bookings by user role
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Booking"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: No bookings found

  /hotels/update/bookings:
    post:
      tags:
        - Bookings
      summary: Update a booking
      description: Updates the booking details, room statuses, and adds a message.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./updateBooking.json#/definitions/updateBooking"
      responses:
        200:
          description: Booking updated successfully
        400:
          description: Validation failed
        500:
          description: Internal server error

  /favs/add:
    post:
      tags:
        - Favourites
      summary: Add a hotel to favourites
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hotel_id:
                  type: integer
                  description: ID of the hotel to add to favourites
              required:
                - hotel_id
      responses:
        "200":
          description: Favourite added successfully
        "400":
          description: Validation failed
        "401":
          description: Unauthorized

  /favs/delete:
    delete:
      tags:
        - Favourites
      summary: Remove a hotel from favourites
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hotel_id:
                  type: integer
                  description: ID of the hotel to remove from favourites
              required:
                - hotel_id
      responses:
        "200":
          description: Favourite removed successfully
        "400":
          description: Validation failed
        "401":
          description: Unauthorized

  /favs/list:
    get:
      tags:
        - Favourites
      summary: List all favourite hotels for a user
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user
      responses:
        "200":
          description: List of favourite hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Hotel"
        "400":
          description: Validation failed
        "401":
          description: Unauthorized

  /users/login:
    post:
      tags:
        - Users
      summary: User login
      description: Authenticate a user and return a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User's username
                password:
                  type: string
                  description: User's password
              required:
                - username
                - password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Invalid credentials
        "500":
          description: Internal server error

  /users/public/register:
    post:
      tags:
        - Users
      summary: Register a public user
      description: Create a new public user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./user.json#/definitions/user"
      responses:
        "201":
          description: User registered successfully
        "400":
          description: Validation failed
        "500":
          description: Registration failed

  /users/staff/register:
    post:
      tags:
        - Users
      summary: Register a staff user
      description: Create a new staff user account using a sign-up code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                signupCode:
                  type: string
                  description: Sign-up code for staff registration
                firstname:
                  type: string
                lastname:
                  type: string
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                avatarurl:
                  type: string
                  format: uri
              required:
                - signupCode
                - username
                - email
                - password
      responses:
        "201":
          description: Staff account registered successfully
        "400":
          description: Validation failed
        "403":
          description: Invalid or already used sign-up code
        "500":
          description: Registration failed

  /users/public/role:
    get:
      tags:
        - Users
      summary: Get user role
      description: Retrieve the role of the authenticated user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User role retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                    description: User's role
        "400":
          description: Invalid token or user ID not found
        "404":
          description: User not found
        "500":
          description: Internal server error

  /users/booking/{id}:
    get:
      tags:
        - Users
      summary: Get booking list by user ID
      description: Retrieve the booking list for a specific user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: User ID
      responses:
        "200":
          description: Booking list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Booking"
        "401":
          description: Unauthorized
        "404":
          description: No bookings found
        "500":
          description: Internal server error

  /users/upload-avatar:
    post:
      tags:
        - Users
      summary: Upload user avatar
      description: Upload an avatar image for the authenticated user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                upload:
                  type: string
                  format: binary
                  description: Avatar image file (max 5MB)
      responses:
        "200":
          description: Avatar uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  avatar_url:
                    type: string
        "400":
          description: Invalid file or missing file
        "401":
          description: Unauthorized
        "500":
          description: Upload failed

  /users:
    get:
      tags:
        - Users
      summary: Get all users (Admin only)
      description: Retrieve a list of all users with pagination
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Maximum number of users to return
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (Admin access required)

  /users/search:
    get:
      tags:
        - Users
      summary: Search users (Admin only)
      description: Search users by field and query
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 50
          description: Maximum number of results
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: fields
          schema:
            type: string
          description: Fields to search in
        - in: query
          name: q
          schema:
            type: string
          description: Search query
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden (Admin access required)

  /msgs/bookings:
    post:
      tags:
        - Messages
      summary: Get latest messages for booking IDs
      description: Retrieve the latest messages for multiple booking IDs
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                booking_ids:
                  type: array
                  items:
                    type: integer
                  description: Array of booking IDs
              required:
                - booking_ids
      responses:
        "200":
          description: Latest messages retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    booking_id:
                      type: integer
                    message:
                      type: string
                    sender_id:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
        "400":
          description: Invalid or missing booking IDs
        "401":
          description: Unauthorized
        "500":
          description: Failed to retrieve messages

components:
  schemas:
    Hotel:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the hotel
        name:
          type: string
          description: Name of the hotel
        description:
          type: string
          description: Description of the hotel
        city:
          type: string
          description: City where the hotel is located
        country:
          type: string
          description: Country where the hotel is located
        address:
          type: string
          description: Full address of the hotel
        rating:
          type: number
          format: float
          description: Rating of the hotel (0-5)
        review_count:
          type: integer
          description: Number of reviews
        image_url:
          type: string
          description: URL of the hotel image
        links:
          type: object
          properties:
            self:
              type: string
              description: Link to hotel details

    Room:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the room
        hotel_id:
          type: integer
          description: ID of the hotel this room belongs to
        capacity:
          type: integer
          description: Maximum number of guests
        bed_option:
          type: string
          description: Bed configuration (e.g., "1 King Bed")
        amenities:
          type: array
          items:
            type: string
          description: List of amenities
        price_per_night:
          type: number
          format: float
          description: Standard price per night
        has_discount:
          type: boolean
          description: Whether the room has a discount
        discount_rate:
          type: number
          format: float
          description: Discount percentage (0.0-1.0)
        actual_price:
          type: number
          format: float
          description: Price after discount

    Booking:
      type: object
      properties:
        booking_id:
          type: integer
          description: Unique identifier for the booking
        user_id:
          type: integer
          description: ID of the user who made the booking
        start_date:
          type: string
          format: date
          description: Check-in date
        end_date:
          type: string
          format: date
          description: Check-out date
        staff_email:
          type: string
          nullable: true
          description: Email of the assigned staff member
        first_message:
          type: string
          description: Initial message from the user
        rooms:
          type: array
          items:
            $ref: "#/components/schemas/Room"
          description: List of rooms in the booking

    User:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the user
        username:
          type: string
          description: Username of the user
        email:
          type: string
          format: email
          description: Email address of the user
        role:
          type: string
          description: Role of the user (e.g., "admin", "staff", "public")
        avatar_url:
          type: string
          format: uri
          description: URL of the user's avatar image

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
